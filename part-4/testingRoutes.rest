@baseUrl = http://localhost:3003/api/blogs

### Get all blogs
GET {{baseUrl}} HTTP/1.1
Content-Type: application/json

### Create new blog (valid)
POST {{baseUrl}} HTTP/1.1
Content-Type: application/json

{
  "title": "git conflicts resolved ?",
  "author": "VS Code",
  "url": "https://rest-client.test",
  "likes": 15
}

### Create blog with missing likes (should default to 0)
POST {{baseUrl}} HTTP/1.1
Content-Type: application/json

{
  "title": "Blog with Missing Likes",
  "author": "Test Author",
  "url": "https://missing.likes"
}

### Create invalid blog (missing title)
POST {{baseUrl}} HTTP/1.1
Content-Type: application/json

{
  "author": "Invalid Author",
  "url": "https://missing.title",
  "likes": 5
}

### Create invalid blog (missing url)
POST {{baseUrl}} HTTP/1.1
Content-Type: application/json

{
  "title": "Missing URL Blog",
  "author": "Invalid Author",
  "likes": 3
}

### Get single blog (replace :id with valid ID)
GET http://localhost:3003/api/blogs/67b3a7e25d676f9066fdbf84 HTTP/1.1

### Get blog with invalid ID
GET {{baseUrl}}/invalid-id-123 HTTP/1.1

### Update blog likes (replace :id with valid ID)
PUT {{baseUrl}}/657d8a9e8a1b2c4a15d3e8f4 HTTP/1.1
Content-Type: application/json

{
  "likes": 42
}

### Update with invalid ID
PUT {{baseUrl}}/invalid-id-123 HTTP/1.1
Content-Type: application/json

{
  "likes": 100
}

### Delete blog (replace :id with valid ID)
DELETE {{baseUrl}}/657d8a9e8a1b2c4a15d3e8f4 HTTP/1.1

### Delete with invalid ID
DELETE {{baseUrl}}/invalid-id-123 HTTP/1.1
